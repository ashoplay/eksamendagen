<div class="joke-container">
    <% if (typeof error !== 'undefined' && error) { %>
        <div class="error-message"><%= error %></div>
    <% } else { %>
        <div class="joke-card">
            <div class="joke-header">
                <% if (isAuthenticated) { %>
                    <div class="favorite-container">
                        <button class="favorite-btn <%= isFavorite ? 'active' : '' %>" onclick="toggleFavorite('<%= joke._id %>')">
                            <i class="fas fa-heart"></i>
                            <span class="favorite-text">Favoritt</span>
                        </button>
                    </div>
                <% } %>
            </div>
            <div class="joke-setup">
                <%= joke.setup %>
            </div>
            <div class="joke-punchline" id="punchline">
                <button onclick="revealPunchline()" id="reveal-btn" class="reveal-btn">
                    <i class="fas fa-lightbulb"></i> Vis poenget
                </button>
                <p class="hidden" id="punchline-text"><%= joke.punchline %></p>
            </div>
            <div class="rating-section">
                <% if (isAuthenticated) { %>
                    <div class="emoji-rating">
                        <div class="emoji-group">
                            <button class="emoji-btn" data-rating="1" onclick="setRating(1)">ðŸ˜¢</button>
                            <span class="rating-points">1 poeng</span>
                        </div>
                        <div class="emoji-group">
                            <button class="emoji-btn" data-rating="2" onclick="setRating(2)">ðŸ˜•</button>
                            <span class="rating-points">2 poeng</span>
                        </div>
                        <div class="emoji-group">
                            <button class="emoji-btn" data-rating="3" onclick="setRating(3)">ðŸ˜Š</button>
                            <span class="rating-points">3 poeng</span>
                        </div>
                        <div class="emoji-group">
                            <button class="emoji-btn" data-rating="4" onclick="setRating(4)">ðŸ˜„</button>
                            <span class="rating-points">4 poeng</span>
                        </div>
                        <div class="emoji-group">
                            <button class="emoji-btn" data-rating="5" onclick="setRating(5)">ðŸ¤£</button>
                            <span class="rating-points">5 poeng</span>
                        </div>
                    </div>
                    <button onclick="submitRating('<%= joke._id %>')" id="rate-btn">
                        <%= userRating ? 'Oppdater vurdering' : 'Send vurdering' %>
                    </button>
                    <div class="rating-stats" id="rating-stats">
                        <div class="average-rating">
                            Gjennomsnittlig vurdering: <span class="rating-value"><%= Number(averageRating).toFixed(1) %> poeng</span>
                        </div>
                        <div class="rating-count">(<%= totalRatings %> vurdering<%= totalRatings !== 1 ? 'er' : '' %>)</div>
                    </div>
                <% } else { %>
                    <p class="login-prompt">
                        <a href="/login">Logg inn</a> eller <a href="/register">registrer deg</a> for Ã¥ vurdere vitser og lagre favoritter!
                    </p>
                <% } %>
            </div>
            <div class="share-buttons">
                <button class="share-btn" onclick="shareJoke('twitter')">
                    <i class="fab fa-twitter"></i> Del pÃ¥ Twitter
                </button>
                <button class="share-btn" onclick="shareJoke('copy')">
                    <i class="fas fa-copy"></i> Kopier
                </button>
            </div>
            <button onclick="location.reload()" class="next-joke-btn">
                <i class="fas fa-forward"></i> Neste vits
            </button>
        </div>
    <% } %>
</div>

<style>
    .joke-container {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        min-height: calc(100vh - 200px);
        padding: 2rem 1rem;
        width: 100%;
    }

    .joke-card {
        background-color: var(--card-background);
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin: 1rem;
        width: 100%;
        max-width: 800px;
    }

    .joke-setup {
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
        color: var(--text-color);
        line-height: 1.4;
    }

    .joke-punchline {
        color: var(--text-color);
        font-size: 1.25rem;
        margin: 1.5rem 0;
        line-height: 1.4;
    }

    .reveal-btn {
        background-color: var(--primary-color);
        color: white;
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin: 1rem 0;
    }

    .reveal-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .hidden {
        display: none;
    }

    #punchline-text {
        opacity: 0;
        animation: fadeIn 0.5s ease forwards;
    }

    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize Socket.IO
        const socket = io();
        
        socket.on('connect', () => {
            console.log('Socket.IO connected');
            const jokeId = '<%= joke._id %>';
            if (jokeId) {
                joinJokeRoom(jokeId);
            }
        });

        socket.on('connect_error', (error) => {
            console.error('Socket.IO connection error:', error);
        });

        // Set initial rating if user has rated before
        const initialRating = '<%= userRating %>';
        const userRating = initialRating !== '' ? parseInt(initialRating) : 0;
        window.currentRating = userRating;

        if (userRating > 0) {
            document.querySelectorAll('.emoji-btn').forEach(btn => {
                if (parseInt(btn.dataset.rating) === userRating) {
                    btn.classList.add('selected');
                }
            });
        }

        // Listen for rating updates
        socket.on('rating update', function(data) {
            if (data.jokeId === '<%= joke._id %>') {
                updateRatingDisplay(data.averageRating, data.totalRatings);
            }
        });
    });

    function joinJokeRoom(jokeId) {
        socket.emit('join joke room', jokeId);
    }

    function revealPunchline() {
        document.getElementById('punchline-text').classList.remove('hidden');
        document.getElementById('reveal-btn').classList.add('hidden');
    }

    function setRating(rating) {
        window.currentRating = rating;
        document.querySelectorAll('.emoji-btn').forEach(btn => {
            btn.classList.remove('selected');
            if (parseInt(btn.dataset.rating) === rating) {
                btn.classList.add('selected');
            }
        });
    }

    async function submitRating(jokeId) {
        try {
            const response = await fetch('/rate-joke', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    jokeId,
                    rating: window.currentRating
                })
            });

            const data = await response.json();
            if (data.success) {
                updateRatingDisplay(data.averageRating, data.totalRatings);
                const ratingStats = document.getElementById('rating-stats');
                ratingStats.classList.add('highlight');
                setTimeout(() => ratingStats.classList.remove('highlight'), 1000);
            } else {
                alert('Could not save rating. Please try again.');
            }
        } catch (error) {
            console.error('Error submitting rating:', error);
            alert('Could not save rating. Please try again.');
        }
    }

    function updateRatingDisplay(averageRating, totalRatings) {
        const ratingStats = document.getElementById('rating-stats');
        const formattedAverage = Number(averageRating).toFixed(1);
        
        ratingStats.innerHTML = `
            <div class="average-rating">
                Gjennomsnittlig vurdering: <span class="rating-value">${formattedAverage} poeng</span>
            </div>
            <div class="rating-count">(${totalRatings} vurdering${totalRatings !== 1 ? 'er' : ''})</div>
        `;
        
        ratingStats.style.display = totalRatings > 0 ? 'block' : 'none';
    }

    async function toggleFavorite(jokeId) {
        try {
            const response = await fetch('/toggle-favorite', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ jokeId })
            });

            const data = await response.json();
            if (data.success) {
                const btn = document.querySelector('.favorite-btn');
                btn.classList.toggle('active');
            } else {
                alert('Could not update favorites. Please try again.');
            }
        } catch (error) {
            console.error('Error toggling favorite:', error);
            alert('Could not update favorites. Please try again.');
        }
    }

    function shareJoke(platform) {
        const setup = '<%= joke.setup %>';
        const punchline = '<%= joke.punchline %>';
        const text = `${setup}\n\n${punchline}`;
        
        if (platform === 'twitter') {
            const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}`;
            window.open(twitterUrl, '_blank');
        } else if (platform === 'copy') {
            navigator.clipboard.writeText(text)
                .then(() => alert('Vits kopiert til utklippstavlen!'))
                .catch(() => alert('Kunne ikke kopiere vits. Vennligst prÃ¸v igjen.'));
        }
    }
</script> 